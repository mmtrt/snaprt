#!/usr/bin/env bash
#
# Author:
#   mmtrt [Taqi Raza]
#
# Description:
#   Snap Revision Timmer (SnapRT)
#
# Date: Jul 15 2018
#

# side script file in tmp dir
rmsr="/tmp/rms"

# exec side script
exrmsr=". $rmsr"

# shows snap revisions that can be removed
function catrms() {
    < $rmsr sed '1d;s/--revision//g;s/=//g' | awk '{print $3,$4}'
}

# using en_US lang with snap list avoid any locale issues
function snap_list() {
    LANG=en_US.UTF-8 snap list --all
}

# get currently installed snap names.
snap_names=$(snap list --all | sed '/disabled/d' | awk '{print $1}')

# create side script to add data
echo "#!/usr/bin/env bash" > $rmsr
chmod +x $rmsr

for f in $snap_names
    do

    # check how many snap revisions are installed & get its num.
    check_num=$(snap list --all | grep -c "$f")
    # check snap installed current revision on system using.
    check_cur_rev=$(snap list --all | grep "$f" | sed '/disabled/d' | awk '{print $3}')
    # check revs of snap
    check_rev=$(snap list --all | grep "$f" | grep disabled | awk '{print $3}')

    if [ "$f" == 'core' ]; then
        check_num=$(snap list --all | sed '/core18/d;/core20/d' | grep -c core)
        check_cur_rev=$(snap list --all | grep core | sed '/core18/d;/core20/d;/disabled/d' | awk '{print $3}')
        check_rev=$(snap list --all | grep core | grep disabled | sed '/core18/d;/core20/d' | awk '{print $3}')
    elif [ "$f" == 'cncra' ]; then
        check_num=$(snap list --all | sed '/cncra2/d' | grep -c cncra)
        check_cur_rev=$(snap list --all | grep cncra | sed '/cncra2/d' | awk '{print $3}')
        check_rev=$(snap list --all | grep cncra | grep disabled | sed '/cncra2/d' | awk '{print $3}')
    fi

    if [ "$check_num" -eq 2 ]; then
        for rev in $check_rev
            do
                if [[ $rev != "$check_cur_rev" ]]; then
                    echo "snap remove $f --revision=$rev" >> $rmsr
                fi
        done
    fi

    if [ "$check_num" -eq 3 ]; then
        for revs in $check_rev
            do
                if [[ $revs != "$check_cur_rev" ]]; then
                    echo "snap remove $f --revision=$revs" >> $rmsr
                fi
        done
    fi
done

if [[ $(catrms | wc -c) -ne 0 ]]; then
    clear
    echo "Do you want to remove these snap revisions?"
    echo ""
    catrms
    echo ""
    while true; do
        read -r -p "(y/n): " -n 1 -s yn
        case $yn in
            [Yy]* ) clear; $exrmsr; rm $rmsr; break;;
            [Nn]* ) clear; rm $rmsr; exit;;
            * ) echo "Wrong Key Pressed!!";;
        esac
    done
    else
    rm $rmsr
    clear
    echo ""
    echo "No extra revision of snaps to be found!"
    echo ""
fi